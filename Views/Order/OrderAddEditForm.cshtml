@model Nice_Admin_Backened.Models.OrderModel

<main id="main" class="main">
    <div class="pagetitle">
        <h1>Form Elements</h1>
        <nav>
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                <li class="breadcrumb-item">Forms</li>
                <li class="breadcrumb-item active">Elements</li>
            </ol>
        </nav>
    </div><!-- End Page Title -->

    <section class="section">
        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Order Add/Edit Form</h5>

                        <!-- Product Form Elements -->
                        <form asp-controller="Order" asp-action="OrderSave" id="orderForm">
                            <input type="hidden" asp-for="OrderID" />
                            <div class="mb-3 row">
                                <label for="inputOrderDate" class="col-sm-3 col-form-label">OrderDate</label>
                                <div class="col-sm-9">
                                    <input type="datetime" asp-for="OrderDate" class="form-control" id="inputOrderDate" placeholder="Enter Order Date">
                                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="mb-3 row">
                                <label for="inputPaymentMode" class="col-sm-3 col-form-label">PaymentMode</label>
                                <div class="col-sm-9">
                                    <input type="text" asp-for="PaymentMode" class="form-control" id="inputPaymentMode" placeholder="Enter Payment">
                                    <span asp-validation-for="PaymentMode" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="mb-3 row">
                                <label for="inputTotalAmount" class="col-sm-3 col-form-label">TotalAmount</label>
                                <div class="col-sm-9">
                                    <input type="number" asp-for="TotalAmount" class="form-control" id="inputTotalAmount" placeholder="Enter TotalAmount">
                                    <span asp-validation-for="TotalAmount" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="mb-3 row">
                                <label for="inputShippingAddress" class="col-sm-3 col-form-label">ShippingAddress</label>
                                <div class="col-sm-9">
                                    <input type="text" asp-for="ShippingAddress" class="form-control" id="inputShippingAddress" placeholder="Enter ShippingAddress">
                                    <span asp-validation-for="ShippingAddress" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label for="inputCustomerId" class="col-sm-3 col-form-label">CustomerId</label>
                                <div class="col-sm-9">
                                    <select class="form-control" id="inputCustomerId" asp-for="CustomerId" asp-items="@(new SelectList(ViewBag.CustomerList, "CustomerID", "CustomerName"))">
                                        <option value="">Select CustomerId</option>
                                    </select>
                                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row mb-3">
                                <label for="inputUserId" class="col-sm-3 col-form-label">UserId</label>
                                <div class="col-sm-9">
                                    <select class="form-control" id="inputUserId" asp-for="UserID" asp-items="@(new SelectList(ViewBag.UserList, "UserID", "UserName"))">
                                        <option value="">Select UserId</option>
                                    </select>
                                    <span asp-validation-for="UserID" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="text-center">
                                <!-- Update button types to "button" to prevent default submit/reset -->
                                <button type="button" class="btn btn-primary" id="submitBtn">Submit</button>
                                <button type="button" class="btn btn-secondary" id="resetBtn">Reset</button>
                            </div>
                        </form><!-- End Product Form Elements -->
                    </div>
                </div>
            </div>
        </div>
    </section>
</main><!-- End #main -->
@section Scripts {
    @{
        Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <!-- Include SweetAlert2 -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // SweetAlert for form submission
        document.getElementById('submitBtn').addEventListener('click', function (e) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to submit the form?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, submit it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // If confirmed, submit the form
                    document.getElementById('orderForm').submit();
                }
            });
        });

        // SweetAlert for form reset
        document.getElementById('resetBtn').addEventListener('click', function (e) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to reset the form? This action cannot be undone.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, reset it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // If confirmed, reset the form
                    document.getElementById('orderForm').reset();
                }
            });
        });

        // Success SweetAlert after form submission
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: '@TempData["SuccessMessage"]'
                    });
            </text>
        }
    </script>
}
